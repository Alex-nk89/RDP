import React from 'react';
import { DefaultProps, MantineColor, ClassNames } from '@mantine/styles';
import type { TabsVariant } from '../Tabs';
import useStyles from './TabControl.styles';
export declare type TabControlStylesNames = Exclude<ClassNames<typeof useStyles>, TabsVariant>;
export interface TabControlProps extends DefaultProps<TabControlStylesNames>, React.ComponentPropsWithRef<'button'> {
    active?: boolean;
    color?: MantineColor;
    variant?: TabsVariant;
    orientation?: 'horizontal' | 'vertical';
    icon?: React.ReactNode;
    buttonRef?: React.ForwardedRef<HTMLButtonElement>;
    label?: React.ReactNode;
    children?: React.ReactNode;
    ref?: React.ForwardedRef<HTMLButtonElement>;
}
export interface TabType {
    type: any;
    props: TabControlProps;
    ref: React.ForwardedRef<HTMLButtonElement>;
}
export declare function TabControl({ className, active, buttonRef, color, variant, classNames, styles, orientation, icon: __, label, icon, color: overrideColor, ...others }: TabControlProps): JSX.Element;
export declare namespace TabControl {
    var displayName: string;
}
//# sourceMappingURL=TabControl.d.ts.map